<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
 
<sqlMap namespace="RoomRateSQL">
	<typeAlias alias="roomRate" type="com.ccm.api.model.ratePlan.RoomRate" />
	<typeAlias alias="roomRateVO" type="com.ccm.api.model.ratePlan.vo.RoomRateVO" />
	
	<insert id="addRoomRate" parameterClass="roomRate">
		INSERT INTO room_rate
		            (roomRateId, roomTypeId, rateDetailId, createdBy, createdTime, updatedBy, lastModifyTime, delFlag)
		VALUES (#roomRateId#, #roomTypeId#, #rateDetailId#, #createdBy#, #createdTime#, #updatedBy#, #lastModifyTime#, #delFlag#)
	</insert>
	
	<insert id="addBatchRoomRates" parameterClass="java.util.List">
	    <![CDATA[
	        insert into room_rate
	        		(roomRateId, roomTypeId, rateDetailId, createdBy, createdTime, updatedBy, lastModifyTime, delFlag)
	        values
	    ]]>
		<iterate conjunction=",">
	      <![CDATA[
	          (
	              #list[].roomRateId#,
	              #list[].roomTypeId#,
	              #list[].rateDetailId#,
	              #list[].createdBy#,
	              #list[].createdTime#,
	              #list[].updatedBy#,
	              #list[].lastModifyTime#,
	              #list[].delFlag#
	          )
	      ]]>
		</iterate>
	</insert>
	
	<select id="getRoomRate" resultClass="roomRate">
		SELECT * FROM room_rate WHERE t1.delFlag = 0 and roomRateId=#value#
    </select>
    
    <select id="getRoomRateVOByRateDetailId" resultClass="roomRateVO">
		SELECT t1.*,t2.roomTypeName,t3.`roomTypeCode` FROM room_rate t1 INNER JOIN  ROOM_TYPE t3 ON t3.roomTypeId=t1.roomTypeId
							   LEFT JOIN room_type_i18n t2 ON t1.roomTypeId = t2.roomTypeId
							         AND t2.delFlag = 0 AND t2.language = #language# 
  WHERE t1.delFlag = 0 and t1.rateDetailId=#rateDetailId# ORDER BY t3.roomTYpeCode
    </select>
    <select id="getRoomRateVOByRateDetailIdAndRoomTYpeCode" resultClass="roomRateVO">
		SELECT t1.*,t2.roomTypeName,t3.`roomTypeCode` FROM room_rate t1 INNER JOIN  ROOM_TYPE t3 ON t3.roomTypeId=t1.roomTypeId
							   LEFT JOIN room_type_i18n t2 ON t1.roomTypeId = t2.roomTypeId
							         AND t2.delFlag = 0 AND t2.language = #language# 
  WHERE t1.delFlag = 0 and t1.rateDetailId=#rateDetailId# AND t3.roomTypeCode=#roomTypeCode#
    </select>
    
    <delete id="deleteRoomRateByRateDetailId">
	    DELETE
			FROM room_rate
		WHERE rateDetailId = #rateDetailId#
    </delete>
    
    <update id="deleteRoomRate">
    	UPDATE room_rate
		SET delFlag = 1 WHERE roomRateId = #value#
    </update>
    
    <update id="deleteRoomRateByRoomTypeId">
    	UPDATE room_rate
		SET delFlag = 1 WHERE roomTypeId = #roomTypeId# and rateDetailId=#rateDetailId#
    </update>
    
    <update id="updateRoomRate" parameterClass="roomRateVO">
    	UPDATE room_rate
		SET roomRateId = #roomRateId#, roomTypeId = #roomTypeId#, rateDetailId = #rateDetailId#, createdBy = #createdBy#, createdTime = #createdTime#, updatedBy = #updatedBy#, lastModifyTime = #lastModifyTime#
		WHERE roomRateId = #roomRateId#
    </update>
    
    <select id="getRoomRateByRatePlanIdAndRoomTypeId" resultClass="roomRate" parameterClass="Map">
		SELECT *FROM room_rate t1 WHERE 
		EXISTS (SELECT * FROM rate_detail WHERE t1.rateDetailId=rateDetailId AND rateplanid=#ratePlanId# and delFlag=0) 
		AND roomTypeId=#roomTypeId# and delFlag=0
    </select>
    
    <!-- 
           删除不存在detail中的room_rate
     -->
    <delete id="deleteRoomRateNotExistsInDetail">
    DELETE FROM room_rate WHERE NOT EXISTS(SELECT 1 FROM rate_detail t2 WHERE room_rate.rateDetailId=t2.rateDetailId)
    </delete>
    
</sqlMap>